{"version":3,"sources":["views/apps/freshlist/accounts/RoleList.js","axiosConfig.js"],"names":["i","RoleList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","size","color","onClick","history","push","id","selectedData","gridApi","getSelectedRows","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","roles","propertyNames","Object","values","catch","error","console","log","this","sm","col-sm-6","tag","length","right","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","contextType","UserContext","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/215.65e48219.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Role Name\",\r\n        field: \"Name\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          // console.log(params);\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Created By\",\r\n      //   field: \"Description\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div className=\"\">\r\n      //           <span>SuperAdmin</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      //   {\r\n      //     headerName: \"Email\",\r\n      //     field: \"email\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 200,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data.notifyby_email}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"ID \",\r\n      //     field: \"Id\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 200,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params?.data?.id}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n\r\n      //   {\r\n      //     headerName: \"Unit Price\",\r\n      //     field: \"unitprice\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data?.price}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Shipping fee\",\r\n      //     field: \"timeslot\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data?.shipping_fee}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Tag\",\r\n      //     field: \"Tag\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 200,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data?.tags}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Tax Rate\",\r\n      //     field: \"Tax Rate\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 200,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data?.tax_rate}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Variety\",\r\n      //     field: \"total_price\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data?.veriety}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Payment\",\r\n      //     field: \"payment\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data.payment}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Payment Status\",\r\n      //     field: \"paymentstatus\",\r\n      //     filter: true,\r\n      //     resizable: true,\r\n      //     width: 200,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <div className=\"ml-2\">\r\n      //             <span>{params.data.paymentstatus}</span>\r\n      //           </div>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n\r\n      //   {\r\n      //     headerName: \"Product Status\",\r\n      //     field: \"status\",\r\n      //     filter: true,\r\n      //     width: 200,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return params.value === \"Order Placed\" ? (\r\n      //         <div className=\"badge badge-pill badge-success\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : params.value === \"painding\" ? (\r\n      //         <div className=\"badge badge-pill badge-warning\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <BsEye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/app/freshlist/account/updateexistingrole/${params.data.id}`\r\n                  )\r\n                }\r\n              />\r\n              <Edit2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/app/freshlist/account/updateexistingrole`\r\n                    // `/app/freshlist/account/updateexistingrole/${params.data.id}`\r\n                  )\r\n                }\r\n              />\r\n              <BsTrash\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  // this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    // const User = this.context;\r\n    // console.log(\"Contextapi data\", User);\r\n    await axiosConfig.get(\"/getrolelist\").then((response) => {\r\n      let rowData = response.data.data?.roles;\r\n      // console.log(rowData);\r\n      // this.setState({ rowData });\r\n    });\r\n    axiosConfig\r\n      .get(\"/getrolelistdropdown\")\r\n      .then((response) => {\r\n        const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n        this.setState({ rowData: propertyNames });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/delcontactus/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files[0] });\r\n  //     this.setState({ selectedName: event.target.files[0].name });\r\n  //     console.log(event.target.files[0]);\r\n  //   };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files });\r\n  //     this.setState({ selectedName: event.target.files.name });\r\n  //     console.log(event.target.files);\r\n  //   };\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n  //   submitHandler = (e) => {\r\n  //     e.preventDefault();\r\n  //     const data = new FormData();\r\n  //     data.append(\"banner_title\", this.state.banner_title);\r\n  //     data.append(\"bannertype\", this.state.bannertype);\r\n  //     data.append(\"status\", this.state.status);\r\n  //     for (const file of this.state.selectedFile) {\r\n  //       if (this.state.selectedFile !== null) {\r\n  //         data.append(\"banner_img\", file, file.name);\r\n  //       }\r\n  //     }\r\n  //     for (var value of data.values()) {\r\n  //       console.log(value);\r\n  //     }\r\n  //     for (var key of data.keys()) {\r\n  //       console.log(key);\r\n  //     }\r\n  //     axiosConfig\r\n  //       .post(\"/addbanner\", data)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //         swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n  //         this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Created Role List\r\n                </h1>\r\n              </Col>\r\n              {/* <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\" float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/refundrequest/addRefund\")\r\n                      }\r\n                    >\r\n                      Add Refund\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    {/* <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Hub Name\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Order Id\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Phone Number\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Enter Email\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://3.6.37.16:8000\",\r\n  baseURL: \"https://invoice-o.com/Infinity/api/ApiCommonController\",\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}