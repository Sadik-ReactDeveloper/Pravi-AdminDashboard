{"version":3,"sources":["views/apps/freshlist/house/EditProductType.js","axiosConfig.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","EditProductType","props","handlerStatus","e","console","log","target","value","setState","Status","changeHandler","name","changeHandlerRole","Role","changeHandler1","status","submitHandler","id","match","params","preventDefault","formdata","FormData","append","state","password","fullname","UserName","B_City","Mobile_no","email","AssignRole","CompanyName","Companytype","Place_of_Supply","B_Street","B_State","B_Country","B_PinCode","S_Street","S_City","S_State","S_Country","S_PinCode","Phone_no","axiosConfig","post","then","response","data","swal","catch","error","handleMatchaddress","checkbox","Address","setuserList","Selectuser","UserId","City","viewData","rolesList","this","billing_city","billing_country","billing_pincode","billing_state","billing_street","company_name","company_type","role","full_name","mobile","phone_no","place_supply","shipping_city","shipping_country","shipping_pincode","shipping_state","shipping_street","username","pageparmission","JSON","parse","localStorage","getItem","Userinfo","propertyNames","Object","values","roles","productName","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","required","type","placeholder","onChange","maxLength","size","bind","disabled","sm","for","checked","style","height","width","map","index","key","marginRight","Ripple","color","Component","instance","axios","create","baseURL","_excluded","propTypes","children","PropTypes","node","string","oneOfType","number","bsSize","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","_this","call","getRef","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","stringOrNumberProp","columnProps","shape","order","offset","hidden","check","xs","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","columnProp","colClass","isObject","_classNames","colSizeInterfix","length","inline","Form","_Component","submit","row","FormGroup"],"mappings":"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","file":"static/js/165.08213bf5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nexport class EditProductType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Address: \"\",\r\n      fullname: \"\",\r\n      B_City: \"\",\r\n      checkbox: \"\",\r\n      S_City: \"\",\r\n      Mobile_no: \"\",\r\n      B_Country: \"\",\r\n      S_Country: \"\",\r\n      Phone_no: \"\",\r\n      Place_of_Supply: \"\",\r\n      B_State: \"\",\r\n      S_State: \"\",\r\n      B_Street: \"\",\r\n      S_Street: \"\",\r\n      B_PinCode: \"\",\r\n      S_PinCode: \"\",\r\n      setuserList: false,\r\n      password: \"\",\r\n      email: \"\",\r\n      status: \"\",\r\n      AssignRole: \"\",\r\n      CompanyName: \"\",\r\n      Companytype: \"\",\r\n      Selectuser: \"\",\r\n      UserName: \"\",\r\n      UserId: \"\",\r\n      City: \"\",\r\n      Role: \"\",\r\n      viewData: [],\r\n      rolesList: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    const data = new FormData();\r\n    data.append(\"user_id\", id);\r\n    await axiosConfig\r\n      .post(\"/usereditview\", data)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        if (this.state.B_Street === this.state.S_Street) {\r\n          this.setState({ checkbox: true });\r\n        }\r\n        this.setState({\r\n          B_City: response.data.data.billing_city,\r\n          B_Country: response.data.data.billing_country,\r\n          B_PinCode: response.data.data.billing_pincode,\r\n          B_State: response.data.data.billing_state,\r\n          B_Street: response.data.data.billing_street,\r\n          CompanyName: response.data.data.company_name,\r\n          Companytype: response.data.data.company_type,\r\n          Role: response.data.data.role,\r\n          AssignRole: response.data.data.role,\r\n          email: response.data.data.email,\r\n          fullname: response.data.data.full_name,\r\n          Mobile_no: response.data.data.mobile,\r\n          Phone_no: response.data.data.phone_no,\r\n          Place_of_Supply: response.data.data.place_supply,\r\n          S_City: response.data.data.shipping_city,\r\n          S_Country: response.data.data.shipping_country,\r\n          S_PinCode: response.data.data.shipping_pincode,\r\n          S_State: response.data.data.shipping_state,\r\n          S_Street: response.data.data.shipping_street,\r\n          UserName: response.data.data.username,\r\n          password: response.data.data.password,\r\n          status: response.data.data.status,\r\n          UserId: response.data.data.id,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(\"/getrolelistdropdown\", formdata)\r\n      .then((response) => {\r\n        const propertyNames = Object.values(response.data?.data?.roles);\r\n        this.setState({\r\n          productName: propertyNames,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handlerStatus = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  changeHandlerRole = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ Role: e.target.value });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    let { id } = this.props.match.params;\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    formdata.append(\"id\", id);\r\n    formdata.append(\"password\", this.state.password);\r\n    formdata.append(\"full_name\", this.state.fullname);\r\n    formdata.append(\"username\", this.state.UserName);\r\n    formdata.append(\"city\", this.state.B_City);\r\n    formdata.append(\"mobile\", this.state.Mobile_no);\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"status\", this.state.status);\r\n    formdata.append(\"role\", this.state.AssignRole);\r\n    formdata.append(\"company_name\", this.state.CompanyName);\r\n    formdata.append(\"company_type\", this.state.Companytype);\r\n    formdata.append(\"place_supply\", this.state.Place_of_Supply);\r\n    formdata.append(\"billing_street\", this.state.B_Street);\r\n    formdata.append(\"billing_city\", this.state.B_City);\r\n    formdata.append(\"billing_state\", this.state.B_State);\r\n    formdata.append(\"billing_country\", this.state.B_Country);\r\n    formdata.append(\"billing_pincode\", this.state.B_PinCode);\r\n    formdata.append(\"shipping_street\", this.state.S_Street);\r\n    formdata.append(\"shipping_city\", this.state.S_City);\r\n    formdata.append(\"shipping_state\", this.state.S_State);\r\n    formdata.append(\"shipping_country\", this.state.S_Country);\r\n    formdata.append(\"shipping_pincode\", this.state.S_PinCode);\r\n    formdata.append(\"phone_no\", this.state.Phone_no);\r\n\r\n    axiosConfig\r\n      .post(\"/usereditsubmit\", formdata)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // this.setState({EditData:response.data.data})\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\r\n        //   \"/app/freshlist/attribute/productAttributeList\"\r\n        // );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleMatchaddress = (value) => {\r\n    this.setState({ checkbox: value });\r\n    if (value) {\r\n      this.setState({ S_Country: this.state.B_Country });\r\n      this.setState({ S_State: this.state.B_State });\r\n      this.setState({ S_City: this.state.B_City });\r\n      this.setState({ S_Street: this.state.B_Street });\r\n      this.setState({ S_PinCode: this.state.B_PinCode });\r\n    } else {\r\n      this.setState({ S_Country: \"\" });\r\n      this.setState({ S_State: \"\" });\r\n      this.setState({ S_City: \"\" });\r\n      this.setState({ S_Street: \"\" });\r\n      this.setState({ S_PinCode: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit User\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/freshlist/house/userlist\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* <CardBody>\r\n            <Form className=\"m-1\" onSubmit={(e) => this.submitHandler(e)}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>UserName</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"UserName\"\r\n                    name=\"UserName\"\r\n                    disabled\r\n                    value={this.state.UserName}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>FullName</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"FullName\"\r\n                    name=\"FullName\"\r\n                    disabled\r\n                    value={this.state.FullName}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    disabled\r\n                    name=\"Email\"\r\n                    value={this.state.Email}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Mobile\"\r\n                    name=\"Mobile\"\r\n                    disabled\r\n                    value={this.state.Mobile}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>City</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    name=\"City\"\r\n                    value={this.state.City}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Password</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Password\"\r\n                    name=\"Password\"\r\n                    value={this.state.Password}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label className=\"mt-2  mb-2\"> Select Role</Label>\r\n\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"Role\"\r\n                    value={this.state.Role}\r\n                    onChange={this.changeHandlerRole}\r\n                  >\r\n                    {this.state.productName &&\r\n                      this.state.productName?.map((list, i) => (\r\n                        <option key={i} value={list}>\r\n                          {list}\r\n                        </option>\r\n                      ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"mb-1\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => this.handlerStatus(e)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Inactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                >\r\n                  Edit User\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody> */}\r\n\r\n          <Card>\r\n            <div className=\"container \">\r\n              <h4 className=\"py-2\">\r\n                Selected User Type :-{\" \"}\r\n                {this.state.AssignRole === \"Client\" ? \"Client\" : \"User\"}\r\n              </h4>\r\n              <Row>\r\n                {/* {this.state.AssignRole === \"Client\" && (\r\n                  <Col lg=\"2\" md=\"2\">\r\n                    <FormGroup>\r\n                      <h3>\r\n                        Client{\" \"}\r\n                        <span>\r\n                          <Input\r\n                            required\r\n                            checked={\r\n                              this.state.AssignRole === \"Client\" ? true : false\r\n                            }\r\n                            className=\"mx-2\"\r\n                            type=\"radio\"\r\n                            name=\"role\"\r\n                            value=\"Client\"\r\n                            onChange={(e) => {\r\n                              this.setState({ setuserList: false });\r\n                              this.setState({ AssignRole: \"Client\" });\r\n                            }}\r\n                          />\r\n                        </span>\r\n                      </h3>\r\n                    </FormGroup>\r\n                  </Col>\r\n                )} */}\r\n\r\n                {/* {this.state.AssignRole === \"User\" && (\r\n                  <Col lg=\"2\" md=\"2\">\r\n                    <FormGroup>\r\n                      <h3>\r\n                        User{\" \"}\r\n                        <span>\r\n                          <Input\r\n                            required\r\n                            height=\"21px\"\r\n                            width=\"41px\"\r\n                            className=\"mx-2\"\r\n                            type=\"radio\"\r\n                            checked={\r\n                              this.state.AssignRole === \"User\" ? true : false\r\n                            }\r\n                            name=\"City\"\r\n                            value=\"User\"\r\n                            onChange={(e) => {\r\n                              this.setState({ setuserList: true });\r\n                              this.setState({ AssignRole: \"User\" });\r\n                            }}\r\n                          />\r\n                        </span>\r\n                      </h3>\r\n                    </FormGroup>\r\n                  </Col>\r\n                )} */}\r\n              </Row>\r\n            </div>\r\n\r\n            <CardBody>\r\n              <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                <Row className=\"mb-2\">\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"fullname\"\r\n                        value={this.state.fullname}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Display Name *</Label>\r\n                      <Input\r\n                        required\r\n                        // disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Your Name\"\r\n                        name=\"UserName\"\r\n                        value={this.state.UserName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Mobile Number *</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Mobile_no\"\r\n                        value={this.state.Mobile_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Phone Number </Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        maxLength={10}\r\n                        size={10}\r\n                        placeholder=\"0123456789\"\r\n                        name=\"Phone_no\"\r\n                        value={this.state.Phone_no}\r\n                        onChange={this.changeHandler.bind(this)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Email</Label>\r\n                      <Input\r\n                        required\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"abcd@gmail.com...\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  {/* <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Password</Label>\r\n                      <Input\r\n                        required\r\n                        disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Enter password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col> */}\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Name</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter CompanyName\"\r\n                        name=\"CompanyName\"\r\n                        value={this.state.CompanyName}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company Type</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Companytype\"\r\n                        name=\"Companytype\"\r\n                        value={this.state.Companytype}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Place of Supply</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Place_of_Supply\"\r\n                        name=\"Place_of_Supply\"\r\n                        value={this.state.Place_of_Supply}\r\n                        onChange={this.changeHandler}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"mt-4\">Billing Address :</h4>\r\n\r\n                    <Col className=\"py-2\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_Country\"\r\n                          value={this.state.B_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"B_State\"\r\n                          value={this.state.B_State}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                          <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                          <option value=\"Maharastra\">Maharastra</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            placeholder=\"Enter City\"\r\n                            name=\"B_City\"\r\n                            value={this.state.B_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            <option value=\"Indore\">Indore</option>\r\n                            <option value=\"Panvel\">Panvel</option>\r\n                            <option value=\"khandwa\">khandwa</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"B_Street\"\r\n                          value={this.state.B_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"B_PinCode\"\r\n                          value={this.state.B_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col lg=\"1\" md=\"1\">\r\n                        <input\r\n                          name=\"check\"\r\n                          checked={\r\n                            this.state.B_Street === this.state.S_Street\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={(e) => {\r\n                            this.handleMatchaddress(e.target.checked);\r\n                          }}\r\n                          style={{\r\n                            height: \"15px\",\r\n                            width: \"20px\",\r\n                          }}\r\n                          type=\"checkbox\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <h5> Same as Billing Address </h5>\r\n                      </Col>\r\n                    </Row>\r\n                    <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose Country</label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_Country\"\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          value={this.state.S_Country}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select Country--</option>\r\n                          <option value=\"India\">India</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <label for=\"cars\">Choose State</label>\r\n                        <select\r\n                          name=\"S_State\"\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          value={this.state.S_State}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                          <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                          <option value=\"Maharastra\">Maharastra</option>\r\n                        </select>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <FormGroup>\r\n                          <label for=\"cars\">Choose City</label>\r\n                          <select\r\n                            disabled={this.state.checkbox ? true : false}\r\n                            placeholder=\"Enter City\"\r\n                            name=\"S_City\"\r\n                            value={this.state.S_City}\r\n                            onChange={this.changeHandler}\r\n                            className=\"form-control\"\r\n                          >\r\n                            <option value=\"volvo\">--Select City--</option>\r\n                            <option value=\"Indore\">Indore</option>\r\n                            <option value=\"Panvel\">Panvel</option>\r\n                            <option value=\"khandwa\">khandwa</option>\r\n                          </select>\r\n                        </FormGroup>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>Street</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Street\"\r\n                          name=\"S_Street\"\r\n                          value={this.state.S_Street}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label>PinCode</Label>\r\n                        <Input\r\n                          required\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          type=\"text\"\r\n                          placeholder=\"Enter PinCode\"\r\n                          name=\"S_PinCode\"\r\n                          value={this.state.S_PinCode}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {this.state.setuserList && (\r\n                  <Row className=\"mt-2\">\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <Label className=\"mt-2  mb-2\"> Select Role</Label>\r\n\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"\"\r\n                        name=\"AssignRole\"\r\n                        value={this.state.AssignRole}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option value=\"Admin\">--Select Role--</option>\r\n\r\n                        {this.state.productName &&\r\n                          this.state.productName?.map((value, index) => (\r\n                            <option key={index} value={value}>\r\n                              {value}\r\n                            </option>\r\n                          ))}\r\n                      </CustomInput>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n                <Row>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                    <Label className=\"mb-1 py-2\">\r\n                      <h4>Status</h4>\r\n                    </Label>\r\n                    <div\r\n                      className=\"form-label-group\"\r\n                      onChange={this.changeHandler1}\r\n                    >\r\n                      <input\r\n                        checked={this.state.status === \"Active\" ? true : false}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        checked={\r\n                          this.state.status === \"Deactive\" ? true : false\r\n                        }\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mt-2 mx-2\"\r\n                  >\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProductType;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://3.6.37.16:8000\",\r\n  baseURL: \"https://invoice-o.com/Infinity/api/ApiCommonController\",\r\n});\r\n\r\nexport default instance;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}